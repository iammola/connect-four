function gameStart(e){let t;switch(e){case"join":codeInput.validity.valid&&(t=codeInput.value.toUpperCase(),localStorage.setItem(ID,2),codeRegex.test(t)&&socket.emit(validRoom,t));break;case"host":for(t="";!codeRegex.test(t);)t=((new Date).valueOf()*Math.random()).toString(36).slice(0,codeLength).toUpperCase();localStorage.setItem(ID,1),roomValid(!0,t);break;default:location.reload()}}function roomValid(e,t){e&&t&&(localStorage.setItem(gameCode,t),location.href="./Home.html")}const socket=io();socket.on(playerValidRoom,e=>roomValid(e.validity,e.roomCode));const hostButton=document.querySelector("button.host_game"),joinButton=document.querySelector("button.join_game"),codeInput=joinButton.previousElementSibling.querySelector("input"),codeLength=7,codeRegex=/(?!^[0-9]+$)(^[A-Z0-9]{7}$)/i,urlCode=location.search.replace("?","");let valid=!1;codeInput.setAttribute("minlength",codeLength),codeInput.setAttribute("maxlength",codeLength),hostButton.addEventListener("click",()=>gameStart("host")),joinButton.addEventListener("click",()=>gameStart("join")),urlCode.length==codeLength&&codeRegex.test(urlCode)&&(codeInput.value=urlCode,joinButton.click());